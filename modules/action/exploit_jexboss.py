import re

from core.actionModule import actionModule
from core.keystore import KeyStore
from core.utils import Utils


class exploit_jexboss(actionModule):
    def __init__(self, config, display, lock):
        super(exploit_jexboss, self).__init__(config, display, lock)
        self.title = "Run JexBoss and look for vulnerabilities"
        self.shortName = "jexboss"
        self.description = "execute [jexboss.py -mode file-scan] on each web service"

        self.requirements = ["jexboss"]
        self.types = ["web"]

        self.safeLevel = 4

        self.triggers = ["newService_https", "newService_http"]

    def getTargets(self):
        self.targets = KeyStore.get('service/http', 'service/https')

    def process(self):
        self.getTargets()
        for t in self.targets:
            ports = KeyStore.get(f'service/http/{t}/tcp')
            for port in ports:
                if not self.seentarget(t + str(port)):
                    self.addseentarget(t + str(port))
                    outfile = f"{self.config['proofsDir']}{self.shortName}_{t}_{str(port)}_{Utils.getRandStr(10)}.txt"
                    command = f"python {self.config['jexboss']} -mode file-scan -out {outfile} -file " \
                              f"<(echo \"http://{t}:{str(port)}\")"

                    result = Utils.execWait(command)
                    KeyStore.add(f"host/{t}/files/{self.shortName}/" + outfile.replace("/", "%2F"))

                    contents = []
                    with open(outfile, "r") as myfile:
                        contents = myfile.readlines()
                        for line in contents:
                            if m := re.match('^.*VULNERABLE TO (.*)].*', line):
                                vuln = m[1].strip()
                                self.addVuln(t, f"{self.shortName}-{vuln}",
                                             {"port": port, "output": outfile.replace("/", "%2F")})

            ports = KeyStore.get(f'service/https/{t}/tcp')
            for port in ports:
                if not self.seentarget(t + str(port)):
                    self.addseentarget(t + str(port))
                    outfile = self.config["proofsDir"] + self.shortName + "_" + t + "_" + str(
                        port) + "_" + Utils.getRandStr(10) + ".txt"

                    command = "python " + self.config[
                        "jexboss"] + " -mode file-scan -out " + outfile + ' -file <(echo \"https://' + t + ":" + str(
                        port) + '\")'

                    result = Utils.execWait(command)
                    KeyStore.add(f"host/{t}/files/{self.shortName}/" + outfile.replace("/", "%2F"))

                    with open(outfile, "r") as myfile:
                        contents = myfile.readlines()
                        for line in contents:
                            if m := re.match('^.*VULNERABLE TO (.*)].*', line):
                                vuln = m[1].strip()
                                self.addVuln(t, f"{self.shortName}-{vuln}",
                                             {"port": port, "output": outfile.replace("/", "%2F")})
        return
